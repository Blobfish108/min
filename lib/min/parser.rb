#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.5
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Min
  class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     1,     3,     4 ]

racc_action_check = [
     0,     2,     3 ]

racc_action_pointer = [
    -2,   nil,     1,     2,   nil ]

racc_action_default = [
    -2,    -1,    -2,    -2,     5 ]

racc_goto_table = [
     2 ]

racc_goto_check = [
     1 ]

racc_goto_pointer = [
   nil,     0 ]

racc_goto_default = [
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 7, :_reduce_none ]

racc_reduce_n = 2

racc_shift_n = 5

racc_token_table = {
  false => 0,
  :error => 1,
  :NULL => 2,
  :TRUE => 3,
  :FALSE => 4,
  :BREAK => 5 }

racc_nt_base = 6

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NULL",
  "TRUE",
  "FALSE",
  "BREAK",
  "$start",
  "SourceElement" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Min
