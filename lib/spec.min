Spec = Object clone do:
  all = Array new
  
  initialize = method(name, object):
    @name = name
    @object = object
  
  should = method:
    # TODO
  
  run = method:
    # TODO

ShouldProxy = Object clone do:
  initialize = method(object)
    @object = object
  
  be = method(other):
    if(@object != other): "should be but was not" println

describe = method:
  spec = Spec new(call args at(0) name, call eval_arg(0))
  call args at(1) eval_on(spec)
  Spec all << spec

Object do:
  should = method: ShouldProxy new(self)

# at_exit:
#   Spec all each(run)
